/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

/*
task A{

    println "Hello A"
    doLast{

        println "Do Last of A"
    }
    doLast{

        println "Another Do Last of A"
    }
}
A.doLast {println "Another One"}
*/

/*
task B (dependsOn:A){

    println "Hello B"
    doLast{

        println "Do Last of B"
    }
}
*/


/*
project.task("Task1")
task("Task2")
task "Task3"
task Task4

Task1.description ="Task 1 desc"
Task2.description ="Task 2 desc"
Task3.description ="Task 3 desc"
Task4.description ="Task 4 desc"

Task4.doLast {println "This is Task4"}//Closure 
Task4.doLast {println "Another Closure for Task4"}
*/
/*
task Task6{
    description "This is task 6"
    doLast{

        println "Do last of Task 6"
    }

    //This will be printed for everything because gradle executes the code that are not actions during configuration phase
    println "Printing 6"
}
//Description gets overrride
Task6.description ="Another Desc for 6"

task Task7(description:"This is task 7"){
    
    doLast{

        println "Do last of Task 7"
    }
    //This will be printed for everything because gradle executes the code that are not actions during configuration phase
    println "Printing 7"
}
*/

/*
task Task8{

    description "This is Task 8"

    doFirst{

        println "Do First of Task 8"

    }

    doLast{

        println "Do Last of Task 8"
    }

}
//Executes before the one in the Task 
Task8.doFirst { println "Another doFirst of Task 8"}

//Task10 should be declared before Task9 so we specify dependsOn:Task10 in Task9
task Task10{

    doLast{
        println "doLast of Task10"
    }
}
task Task9(description:"This task9",dependsOn:Task10 ){// All the actions of Task10 is executed before Task9

    doLast{
        println "doLast of Task9"
    }
}

Task8.dependsOn Task9 // All actions of Task 9 executes before Task 8



// Output:
// > Task :Task10
// doLast of Task10

// > Task :Task9
// doLast of Task9

// > Task :Task8
// Another doFirst of Task 8
// Do First of Task 8
// Do Last of Task 8


*/


/*
task Task1{

    doLast{
        println "doLast of Task 1"
    }
}
task Task2{
  
    doLast{
        println "doLast of Task 2"
    }
}
task Task3{
    dependsOn Task1
    doLast{
        println "doLast of Task 3"
    }
}
task Task4{

    dependsOn Task3,Task2
    doLast{
        println "doLast of Task 4"
    }
}

Task3.dependsOn Task2


// Output
// > Task :Task2
// doLast of Task 2

// > Task :Task1
// doLast of Task 1

// > Task :Task3
// doLast of Task 3

// > Task :Task4
// doLast of Task 4

*/


/*
def name1="Testing properties 1" //Scope only in this build file
project.ext.name2="Testing properties 2"
ext.name3="Testing properties 3"

task Task10{

    project.ext.name4="Testing properties 4 Inside Task " //without project keyword this will not be available outside
    def name5="Testing properties 5 Inside Task" //Not available outside
}

task Task11{

    doLast{

        println "Do Last of Task11 and printing property projectName = $name1"
        println "Do Last of Task11 and printing property projectName = $name2"
        println "Do Last of Task11 and printing property projectName = $name3"
        println "Do Last of Task11 and printing property projectName = $name4"
        //println "Do Last of Task11 and printing property projectName = $name5" // This will nt be available
    }
}
*/


task TaskA{

    doLast{
        println "Task A Do last"
    }
}

task TaskB{

    dependsOn  TaskA
    doLast{
        println "Task A Do last"
    }
}

TaskB.finalizedBy TaskA

